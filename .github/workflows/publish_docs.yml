name: Publish Documentation
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          
      - name: Install DocFX
        run: |
          dotnet tool install -g docfx
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
        
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
        
      - name: Restore dependencies
        run: dotnet restore bank/Bank.sln
          
      - name: Build solution
        run: dotnet build bank/Bank.sln --no-restore
          
      - name: Run tests with coverage
        run: dotnet test bank/Bank.sln --collect:"XPlat Code Coverage" --no-build
          
      - name: Generate coverage report
        working-directory: bank
        run: dotnet tool run reportgenerator "-reports:./*/*/*/coverage.cobertura.xml" "-targetdir:Cobertura" -reporttypes:MarkdownSummaryGithub
          
      - name: Generate documentation metadata
        working-directory: bank
        run: dotnet tool run docfx metadata docfx.json
          
      - name: Build documentation
        working-directory: bank
        run: dotnet tool run docfx build docfx.json
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './bank/_site'
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4