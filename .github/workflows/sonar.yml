name: Sonar + NuGet CI
# Este workflow puede incluir pasos para publicar paquetes nuget
env:
  DOTNET_VERSION: '8.x'                     # la versi√≥n de .NET
  SONAR_ORG: 'krcrimson'                    # Nombre de la organizaci√≥n de sonar cloud
  SONAR_PROJECT: 'krcrimson_apibank'        # Key ID del proyecto de sonar
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        working-directory: ./Bank
        run: dotnet restore 

      - name: Build project
        working-directory: ./Bank
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        working-directory: ./Bank
        run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage;Format=opencover"

      - name: Pack NuGet package
        working-directory: ./Bank
        run: dotnet pack Bank.Domain/Bank.Domain.csproj --configuration Release --output ./nupkg --no-build /p:PackageVersion=1.0.${{ github.run_number }}

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: ./Bank/nupkg/*.nupkg

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: "Release 1.0.${{ github.run_number }}"
          body: |
            ## Cambios en esta versi√≥n
            - Build autom√°tico del proyecto Bank.Domain v1.0.${{ github.run_number }}
            - Ejecuci√≥n de pruebas unitarias con cobertura de c√≥digo
            - Generaci√≥n de paquete NuGet
            
            **Commit:** ${{ github.sha }}
            **Run:** ${{ github.run_number }}
          files: ./Bank/nupkg/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonarcloud-analysis:
    name: SonarCloud Analysis (Optional)
    runs-on: ubuntu-latest
    needs: build-and-test
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install SonarScanner
        run: dotnet tool install -g dotnet-sonarscanner
        
      - name: Debug SonarCloud Config
        run: |
          echo "SONAR_ORG: ${{ env.SONAR_ORG }}"
          echo "SONAR_PROJECT: ${{ env.SONAR_PROJECT }}"
          echo "Token configured: ${{ secrets.SONAR_TOKEN != '' }}"
          echo "Token length: ${#SONAR_TOKEN}" 
          echo "SonarScanner installed successfully"
          which dotnet-sonarscanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Begin
        working-directory: ./Bank
        run: |
          echo "üöÄ Starting SonarCloud analysis..."
          echo "üìã Project Key: ${{ env.SONAR_PROJECT }}"
          echo "üè¢ Organization: ${{ env.SONAR_ORG }}"
          echo "üîß Running dotnet-sonarscanner begin..."
          dotnet-sonarscanner begin /k:"${{ env.SONAR_PROJECT }}" /o:"${{ env.SONAR_ORG }}" /n:"API Bank" /v:"1.0.${{ github.run_number }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.qualitygate.wait=false
          echo "‚úÖ SonarCloud begin completed successfully"

      - name: Restore and Build
        working-directory: ./Bank
        run: |
          dotnet restore 
          dotnet build --configuration Release --no-restore

      - name: Run Tests
        working-directory: ./Bank
        run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage;Format=opencover"

      - name: SonarCloud End
        working-directory: ./Bank
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"